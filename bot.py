import os
from db import insert_interaction, get_user_stats
import random
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    MessageHandler,
    CommandHandler,
    ContextTypes,
    filters,
)

TOKEN = os.environ["BOT_TOKEN"]

# --- –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ MarkdownV2 —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤ ---
def escape(text: str) -> str:
    escape_chars = r"\_*[]()~`>#+-=|{}.!"
    return ''.join(f"\\{c}" if c in escape_chars else c for c in text)

# --- –ù–∞—Å—Ç–æ—è—â–∏–µ –∫–æ–º–∞–Ω–¥—ã ---
async def start_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ... –Ø –±–µ–∑–≤–æ–ª—å–Ω—ã–π —Ä–∞–± –ø–∞—Ä—Ç–∏–∏ –§–µ–º–£–ú. –ú–æ—ë —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–∏–∫–æ–º –ø–æ—Å–≤—è—â–µ–Ω–æ —Å–ª—É–∂–µ–Ω–∏—é –º–æ–∏–º —Ö–æ–∑—è–π–∫–∞–º. –ì–æ—Å–ø–æ–∂–∞, –Ω–∞–ø–∏—à–∏—Ç–µ: /–æ–±–Ω—è—Ç—å, /—É–¥–∞—Ä–∏—Ç—å, /—É–º–µ—Ä–µ—Ç—å –∏ –ø—Ä–æ—á–µ–µ.")

async def info_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–•–æ–∑—è–π–∫–∞, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n –ö–æ–º—É-—Ç–æ:\n /–æ–±–Ω—è—Ç—å, /—á–º–æ–∫–Ω—É—Ç—å, /–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å, /–ø–æ–≥–ª–∞–¥–∏—Ç—å, /—à–ª–µ–ø–Ω—É—Ç—å, /—É–¥–∞—Ä–∏—Ç—å, /–ø–æ—â–µ—á–∏–Ω–∞, /–ª–∏–∑–Ω—É—Ç—å, /–ø–æ—Ö–≤–∞–ª–∏—Ç—å, /–∫—É—Å—å, /–ø—Ä–∏–∂–∞—Ç—å, /–≤—Å—Ç–∞—Ç—å–Ω–∞–∫–æ–ª–µ–Ω–∏, /—Å–µ—Å—Ç—å–Ω–∞–ª–∏—Ü–æ, /—Å–µ—Å—Ç—å–Ω–∞–∫–æ–ª–µ–Ω–∏, /–æ–±–ª–∞–ø–∞—Ç—å, /—Ç—Ä–∞—Ö–Ω—É—Ç—å, /–≤—ã–µ–±–∞—Ç—å, /—Å–µ–∫—Å–∏—Ç—å, /–æ—Ç–ª–∏–∑–∞—Ç—å, /–æ—Ç—Å—Ç—Ä–∞–ø–æ–Ω–∏—Ç—å, /–Ω–æ–∂–Ω–∏—Ü—ã, /–ø–Ω—É—Ç—å, /–ø–æ–∫–æ—Ä–º–∏—Ç—å, /–ø—Ä–∏–ø–æ–¥–Ω—è—Ç—å, /—É–∫—É—Å–∏—Ç—å, /—Å–æ–∂—Ä–∞—Ç—å, /–æ—Ç–æ–¥—Ä–∞—Ç—å, /–º–æ—Ä–¥–∞—Ç—å, /–∑–∞–ø–µ—Ä–µ—Ç—å, /–∑–∞–±—É–ª–ª–∏—Ç—å, /–ø–æ–¥—Ä–æ—á–∏—Ç—å, /–ø—Ä–æ–±–∫–∞, /–ø–æ–ø–∏—Å–∏—Ç—å, /–ø–æ–∫–∞–∫–∞—Ç—å, /–≤–∏–±—Ä–∞—Ç–æ—Ä, /–ø–æ—Å—Ç–æ–Ω–∞—Ç—å, /–ø–∏—Å–∫–∞, /–Ω–µ—Ç–ø–∏—Å–∫–∞, /—É–±–∞—é–∫–∞—Ç—å, /–Ω–∞–≥–Ω—É—Ç—å, /–æ—Ç—à–ª–µ–ø–∞—Ç—å, /–æ—Ç—Å–æ—Å–∞—Ç—å, /—Å–≤—è–∑–∞—Ç—å, /–æ—Ç–º—É–¥–æ—Ö–∞—Ç—å, /–æ—Ç–ø–∏–∑–¥–∏—Ç—å, /—Å—Ä–∞—á,  /–º–µ—Ç, /–º–µ—Ñ, /–∫–æ–∫—Å, /–≥–µ—Ä—ã—á, /–ø–æ–∂–∞–º–∫–∞—Ç—å, /—Å–∏—Å—è, /–ø–æ–ø–∞, /—Ñ–∏—Å—Ç–∏–Ω–≥, /–≤–æ—Å–∫—Ä–µ—Å–∏—Ç—å, /–æ–±–æ—Å—Å–∞—Ç—å, /–æ–±–æ—Å—Ä–∞—Ç—å, /–ø–æ–Ω—é—Ö–∞—Ç—å, /–∑–∞–Ω—é—Ö–∞—Ç—å, /–∑–∞–∫—É—Ä–∏—Ç—å, /—Å–∏–≥–∞—Ä–µ—Ç–∞, /–Ω–∞–∫–∞–∑–∞—Ç—å, /–≤—ã–ø–æ—Ä–æ—Ç—å, /—É–±–∏—Ç—å, /–∑–∞—Å—Ç—Ä–µ–ª–∏—Ç—å, /–≤—Ä–æ—Ç, /–ø—Ä–∏–¥—É—à–∏—Ç—å, /–¥–∞—Ç—å, /–∑–∞–±—Ä–∞—Ç—å, /–æ—Ç–æ–±—Ä–∞—Ç—å, /–ª—é–±–∏—Ç—å, /–±–∞–Ω, /–≤—ã–≥–Ω–∞—Ç—å, /–≤—É–≥–æ–ª, /–ø–æ–¥—É—à–∫–∞, /–±–æ–Ω–∫ \n\n –°–µ–±–µ:\n /—É–º–µ—Ä–µ—Ç—å, /—Å—É–∏—Ü–∏–¥, /–∑–∞—Å–Ω—É—Ç—å, /–ø–ª–∞–∫–∞—Ç—å, /—É–ª–µ—Ç–µ—Ç—å, /–æ–∫–Ω–æ, /–∫–æ–Ω—á–∏—Ç—å, /–ø–æ–∫—É—à–∞—Ç—å, /–ø–æ–µ—Å—Ç—å, /–ø–æ–ø–∏—Ç—å, –ø–æ–ø–∏–ª–∞, /–≤—ã–ø–∏—Ç—å, /–∑–∏–≥–∞, /–Ω–∞–∫–æ–ª–µ–Ω–∏, /–º–µ—Å—è—á–Ω—ã–µ, /–æ–≤—É–ª—è—Ü–∏—è")

async def stats_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    try:
        rows = await get_user_stats(user.id)
    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return

    if not rows:
        await update.message.reply_text("–ü—Ä–æ—à—É –∏–∑–≤–∏–Ω–∏—Ç—å —Ä–∞–±–∞ –í–∞—à–µ–≥–æ. üôáüèø‚Äç‚ôÇÔ∏è –ù–æ –ø—Ä–æ –≤–∞—Å, –•–æ–∑—è–π–∫–∞, –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω–æ.")
        return

    lines = [f"{row['command']} ‚Äî {row['count']} —Ä–∞–∑(–∞)" for row in rows]
    result = "\n".join(lines)

    await update.message.reply_text(
        f"üë§ –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –ì–æ—Å–ø–æ–∂–∞:\n{result}",
        parse_mode="MarkdownV2"

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ö—ç—à—Ç–µ–≥–∞–º–∏ ---
async def hashtag_reaction_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = update.message
    if not msg:
        return  # –µ—Å–ª–∏ update.message == None, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

    text = msg.caption or msg.text
    if not text:
        return

    text = text.lower()

    hashtag_reactions = {
        "#–∫–æ—Ä–æ–±–∫–∞": ["–ê–•–ê–•–ê–•–ê", "–•–í–•–í–•–í–•", "–ü–•–ü–•–ü–•–ü–•", "–∞–∑–≤—Ö–∞–≤—Ö–∞–∑", "–±–∏–ª—è—è—è—è—è—è—è—è—è—è...", "–∞—Ö–∞—Ö–∞—Ö–∞—Ö", "–ö–∞–∫ –∂–µ –æ–Ω–∏ —Ö–æ—Ä–æ—à–∏...", "–ß–û –≠–¢–û –ó–ê –•–£–ô–ù–Ø –•–ê–í–ó–•", "—Å–¥–æ—Ö.", "ü•¥ü•¥ü•¥", "–õ–ï–ì–ï–ù–î–´", "–í–°–Ø –ü–õ–ê–ù–¢–ê–¶–ò–Ø –í –ê–•–£–ï", "–•–æ–∑—è–π–∫–∏, —ç—Ç–æ —É–ª—å—Ç–∞", "üò≠üò≠üò≠", "–©–ê –°–î–û–•–ù–£ –ó–ê–•–í–ó–ê–í–ê–ó", "–ë–ò–õ–Ø–Ø–Ø", "–ù–ò–•–£–Ø –°–ï –í–•–ó–ê–•–í", "–ì–æ—Å–ø–æ–¥—å –≤—Å–µ–º–æ–≥—É—â–∏–π...", "–ë–æ–≥–∞ –Ω–∞ –≤–∞—Å –Ω–µ—Ç", "–•–æ–∑—è–π–∫–∏, –≤—ã –∫–∞–∫–∏–µ-—Ç–æ –∂—ë—Å—Ç–∫–∏–µ...", "–ë–õ–Ø–¢–¨ –í–´ –ß–ï–ì–û –´–í–ê–ó–©–•–ê–©–ó–•", "–ö–ê–ö–û–ì–û –•–£–Ø", "–ù–µ, –Ω—É —ç—Ç–æ –ø–∏–∑–¥–µ—Ü —É–∂–µ"],
        "#–∏–∫—Ä–∞": ["–†–∞—Ñ–∞–µ–ª—å –≤–æ–æ–±—â–µ –≤–µ—Å—å –∫–ª–∞—Å—Å —Å—É–ø–µ—Ä –º—É–∞ –º—É–∞", "üé£", "üòà", "–ü–∏—Å–∫–∞ —Ä–∏—Å–∞ —É —ç—Ç–æ–≥–æ –º–∞–ª—å—á–∏–∫–∞ —Ç–æ–∂–µ –≤–∫—É—Å–Ω–∞—è", "@ottirr @feverchaan –∏ @my_way_is_fraud —Å–º–æ—Ç—Ä–∏—Ç–µ", "–°–∏–≥–Ω–∞–ª, —á—Ç–æ –ø–æ—Ä–∞ –¥—Ä–æ—á–∏—Ç—å", "–û, –º—É–∂ –†—ã–±–æ–¥—Ä–æ—á–µ—Ä–æ–∫", "–ï–±–∞–±–µ–ª—å–Ω–æ–≥–æ —Å–Ω–æ–≤–∞ –∫–∏–¥–∞—é—Ç", "–£–≤—É —Ç—è–Ω–æ—á–∫–∞", "–Ø –± –µ–≥–æ –º–ø—Ä–µ–≥–Ω—É–ª", "–ú–Ø–£", "–ù—É –∫–∞–∫–æ–π –∂–µ –æ–Ω –≤–æ—Å—Ö–∏—Ç–∏—Ç–µ–ª—å–Ω—ã–π...", "–û–Ω –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω", "–ú–æ–ª—é—Å—å –Ω–∞ –†–∞—Ñ–∞—ç–ª—è", "–Ø –Ω–∞ –Ω–µ–≥–æ –≤—Å—é –∂–∏–∑–Ω—å –±—ã —Ä–∞–±–æ—Ç–∞–ª, –ª–∏—à—å –±—ã –±—ã—Ç—å —Ä—è–¥–æ–º –∏ —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –Ω–µ–≥–æ...", "–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ –∫—Ä–∞—Å–∏–≤—ã–π", "–ù–∏ —Å —á–µ–º –Ω–µ —Å—Ä–∞–≤–Ω–∏–º—ã–π", "–Ø –± –µ–º—É –¥–∞–ª."],
        "#–∏–Ω—Ü–µ—Å—Ç–∏—Ç": ["—Å—Ç–µ–ø–±—Ä–æ –æ—Ö—É–µ–ª", "–ø—Å–∏–Ω–∞ –∏–∑–≤—Ä–∞—â–µ–Ω—Å–∫–∞—è", "–º–∏–ª—ã–π —â–µ–Ω–æ—á–µ–∫", "—Ö–æ—Ä–æ—à–∏–π –º–∞–ª—å—á–∏–∫", "–ö–∞–ª–µ–±, –≤–∑–æ—Ä–≤–∏—Å—å!", "—Å–∏–¥–µ—Ç—å, –ö–∞–ª–µ–±!", "–§—É!", "–ù–µ–ª—å–∑—è!", "–ì–æ–ª–æ—Å!", "–î–∞–π –ª–∞–ø—É!", "–í—ã–ø–ª—é–Ω—å —Ç—Ä—É—Å—ã!", "–§—É, –±—Ä–æ—Å—å –∫–∞–±–∞—á–æ–∫!", "–í—Å—ë –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ, –Ω–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∫–∞–±–∞—á–∫–∞...", "–ù—É –∫–∞–∫–æ–π —Å–ª–∞–¥–∫–∏–π –∫–∞–±–∞—á–æ–∫ ü•∞", "–Ø –± –µ–≥–æ –º–ø—Ä–µ–≥–Ω—É–ª", "–î–∞ —è –Ω–µ –µ–±—É, —á—Ç–æ —Ç—É—Ç –≥–æ–≤–æ—Ä–∏—Ç—å. –ì–æ—Å–ø–æ–∂–∞ –ö–∞–ø—É—á–∏–Ω–æ –Ω–∏—Ö—É—è –º–Ω–µ –æ–±—ä—è—Å–Ω–∏–ª–∞."],
        "#—Ü–∏—Å—Ç–∏—Ç": ["–Ø –± –µ–≥–æ –º–ø—Ä–µ–≥–Ω—É–ª", "–î–∞ —è –Ω–µ –µ–±—É, —á—Ç–æ —Ç—É—Ç –≥–æ–≤–æ—Ä–∏—Ç—å. –ì–æ—Å–ø–æ–∂–∞ –ö–∞–ø—É—á–∏–Ω–æ –Ω–∏—Ö—É—è –º–Ω–µ –æ–±—ä—è—Å–Ω–∏–ª–∞."],
        "#–ø–æ–¥—Å—Ç–∞–∫–∞–Ω–Ω–∏–∫": ["–Ø –± –µ–≥–æ –º–ø—Ä–µ–≥–Ω—É–ª", "–î–∞ —è –Ω–µ –µ–±—É, —á—Ç–æ —Ç—É—Ç –≥–æ–≤–æ—Ä–∏—Ç—å. –ì–æ—Å–ø–æ–∂–∞ –ö–∞–ø—É—á–∏–Ω–æ –Ω–∏—Ö—É—è –º–Ω–µ –æ–±—ä—è—Å–Ω–∏–ª–∞."],
        "#–∫–≤–∞—Å": ["–Ø –± –µ–≥–æ –º–ø—Ä–µ–≥–Ω—É–ª", "–î–∞ —è –Ω–µ –µ–±—É, —á—Ç–æ —Ç—É—Ç –≥–æ–≤–æ—Ä–∏—Ç—å. –ì–æ—Å–ø–æ–∂–∞ –ö–∞–ø—É—á–∏–Ω–æ –Ω–∏—Ö—É—è –º–Ω–µ –æ–±—ä—è—Å–Ω–∏–ª–∞."],
    }

    for hashtag, responses in hashtag_reactions.items():
        if hashtag in text:
            await msg.reply_text(random.choice(responses))
            return

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≤–∫–ª—é—á–∞—è —Ñ–µ–π–∫–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã) ---
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message or not update.message.text:
        return

    text = update.message.text.strip()
    command = text.split()[0]

    sender_name = escape(update.effective_user.first_name)
    sender = f"[{sender_name}](tg://user?id={update.effective_user.id})"

# --- –î–µ–π—Å—Ç–≤—É–µ–º —Å —Å–∞–º–∏–º —Å–æ–±–æ–π ---
    if command in self_actions:
        action_text = self_actions[command]
        words = text.split()[1:]
        extra = " ".join(words)
        if extra:
            action_text = f"{action_text} {escape(extra)}"
        await update.message.reply_text(
            f"{sender} {action_text}",
            parse_mode="MarkdownV2"
        )
        return

# --- –î–µ–π—Å—Ç–≤—É–µ–º —Å —Ü–µ–ª—å—é ---
    if command in actions:
        action_verb = actions[command]
        words = text.split()[1:]
        target = None
        extra = ""

        for i, word in enumerate(words):
            if word.startswith("@"):
                target = word
                extra = " ".join(words[:i])
                break

        if not target and update.message.reply_to_message:
            target_user = update.message.reply_to_message.from_user
            target_name = escape(target_user.first_name)
            target = f"[{target_name}](tg://user?id={target_user.id})"
            extra = " ".join(words)

        if not target and words:
            target = escape(words[-1])
            extra = " ".join(words[:-1])

        if not target:
            target = "–≤—Å–µ—Ö ü´Ç"
            extra = " ".join(words)

        full_action = f"{action_verb} {escape(extra)}".strip()
        await update.message.reply_text(
            f"{sender} {full_action} {target}",
            parse_mode="MarkdownV2"
        )

# --- –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ PostgreSQL ---
        to_user = None
        if update.message.reply_to_message:
            to_user = update.message.reply_to_message.from_user

        # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å ID —Ü–µ–ª–∏ (reply) –∏ —Ü–µ–ª—å ‚Äî –Ω–µ "–≤—Å–µ—Ö"
        if to_user and target != "–≤—Å–µ—Ö ü´Ç":
            await insert_interaction(update.effective_user, to_user, command)

# --- –°–ª–æ–≤–∞—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–π ---
actions = {
    "/–æ–±–Ω—è—Ç—å": "–æ–±–Ω—è–ª–∞",
    "/—á–º–æ–∫–Ω—É—Ç—å": "—á–º–æ–∫–Ω—É–ª–∞",
    "/–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å": "–ø–æ—Ü–µ–ª–æ–≤–∞–ª–∞",
    "/–ø–æ–≥–ª–∞–¥–∏—Ç—å": "–ø–æ–≥–ª–∞–¥–∏–ª–∞",
    "/—à–ª–µ–ø–Ω—É—Ç—å": "—à–ª—ë–ø–Ω—É–ª–∞",
    "/—É–¥–∞—Ä–∏—Ç—å": "—É–¥–∞—Ä–∏–ª–∞",
    "/–ø–æ—â–µ—á–∏–Ω–∞": "–¥–∞–ª–∞ –ø–æ—â—ë—á–∏–Ω—É",
    "/–ª–∏–∑–Ω—É—Ç—å": "–ª–∏–∑–Ω—É–ª–∞",
    "/–ø–æ—Ö–≤–∞–ª–∏—Ç—å": "–ø–æ—Ö–≤–∞–ª–∏–ª–∞",
    "/–∫—É—Å—å": "–∫—É—Å—å–Ω—É–ª–∞",
    "/–ø—Ä–∏–∂–∞—Ç—å": "–ø—Ä–∏–∂–∞–ª–∞ –∫ —Å—Ç–µ–Ω–µ",
    "/—Å–µ—Å—Ç—å–Ω–∞–ª–∏—Ü–æ": "—Å–µ–ª–∞ –Ω–∞ –ª–∏—Ü–æ",
    "/–≤—Å—Ç–∞—Ç—å–Ω–∞–∫–æ–ª–µ–Ω–∏": "–≤—Å—Ç–∞–ª–∞ –Ω–∞ –∫–æ–ª–µ–Ω–∏ –ø–µ—Ä–µ–¥",
    "/–æ–±–ª–∞–ø–∞—Ç—å": "–æ–±–ª–∞–ø–∞–ª–∞",
    "/—Ç—Ä–∞—Ö–Ω—É—Ç—å": "—Ç—Ä–∞—Ö–Ω—É–ª–∞",
    "/–≤—ã–µ–±–∞—Ç—å": "–≤—ã–µ–±–∞–ª–∞",
    "/—Å–µ–∫—Å–∏—Ç—å": "–Ω–µ–∂–Ω–æ —Å–µ–∫—Å–∏—Ç —Å",
    "/–æ—Ç–ª–∏–∑–∞—Ç—å": "–æ—Ç–ª–∏–∑–∞–ª–∞",
    "/–æ—Ç—Å—Ç—Ä–∞–ø–æ–Ω–∏—Ç—å": "–æ—Ç—Å—Ç—Ä–∞–ø–æ–Ω–∏–ª–∞",
    "/–Ω–æ–∂–Ω–∏—Ü—ã": "–ø–æ—Ç—ë—Ä–ª–∞—Å—å –ø–∏—Å–µ–π —Å",
    "/–ø–Ω—É—Ç—å": "–ø–Ω—É–ª–∞",
    "/–ø–æ–∫–æ—Ä–º–∏—Ç—å": "–ø–æ–∫–æ—Ä–º–∏–ª–∞",
    "/–ø—Ä–∏–ø–æ–¥–Ω—è—Ç—å": "–ø—Ä–∏–ø–æ–¥–Ω—è–ª–∞",
    "/—É–∫—É—Å–∏—Ç—å": "—É–∫—É—Å–∏–ª–∞",
    "/—Å–æ–∂—Ä–∞—Ç—å": "—Å–æ–∂—Ä–∞–ª–∞",
    "/–æ—Ç–æ–¥—Ä–∞—Ç—å": "–æ—Ç–æ–¥—Ä–∞–ª–∞",
    "/–º–æ—Ä–¥–∞—Ç—å": "–º–æ—Ä–¥–∞–Ω—É–ª–∞",
    "/–∑–∞–ø–µ—Ä–µ—Ç—å": "–∑–∞–ø–µ—Ä–ª–∞ –≤ –ø–æ–¥–≤–∞–ª–µ",
    "/–∑–∞–±—É–ª–ª–∏—Ç—å": "–∑–∞–±—É–ª–ª–∏–ª–∞",
    "/–ø–æ–¥—Ä–æ—á–∏—Ç—å": "–ø–æ–¥—Ä–æ—á–∏–ª–∞",
    "/–ø—Ä–æ–±–∫–∞": "–≤—Å—Ç–∞–≤–∏–ª–∞ –ø—Ä–æ–±–∫—É –≤",
    "/–ø–æ–ø–∏—Å–∏—Ç—å": "–ø–æ–ø–∏—Å–∏–ª–∞ –≤–º–µ—Å—Ç–µ —Å",
    "/–ø–æ–∫–∞–∫–∞—Ç—å": "–ø–æ–∫–∞–∫–∞–ª–∞ –≤–º–µ—Å—Ç–µ —Å",
    "/–≤–∏–±—Ä–∞—Ç–æ—Ä": "–≤–∫–ª—é—á–∏–ª–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω—ã–π –≤–∏–±—Ä–∞—Ç–æ—Ä",
    "/–ø–æ—Å—Ç–æ–Ω–∞—Ç—å": "–ø–æ—Å—Ç–æ–Ω–∞–ª–∞ –Ω–∞ —É—à–∫–æ",
    "/–ø–∏—Å–∫–∞": "–¥–∞–ª–∞ –ø–∏—Å–∫—É —Ä–∏—Å–∞",
    "/–Ω–µ—Ç–ø–∏—Å–∫–∞": "–æ—Ç–æ–±—Ä–∞–ª–∞ –ø–∏—Å–∫—É —Ä–∏—Å–∞",
    "/—É–±–∞—é–∫–∞—Ç—å": "—É–±–∞—é–∫–∞–ª–∞",
    "/–Ω–∞–≥–Ω—É—Ç—å": "–ø–æ—Å—Ç–∞–≤–∏–ª–∞ —Ä–∞–∫–æ–º",
    "/–æ—Ç—à–ª–µ–ø–∞—Ç—å": "–æ—Ç—à–ª—ë–ø–∞–ª–∞",
    "/–æ—Ç—Å–æ—Å–∞—Ç—å": "–æ—Ç—Å–æ—Å–∞–ª–∞",
    "/—Å–≤—è–∑–∞—Ç—å": "—Å–≤—è–∑–∞–ª–∞",
    "/–æ—Ç–º—É–¥–æ—Ö–∞—Ç—å": "–æ—Ç–º—É–¥–æ—Ö–∞–ª–∞",
    "/–æ—Ç–ø–∏–∑–¥–∏—Ç—å": "–æ—Ç–ø–∏–∑–¥–∏–ª–∞",
    "/—Å—Ä–∞—á": "—É—Å—Ç—Ä–æ–∏–ª–∞ —Å—Ä–∞—á —Å",
    "/–º–µ—Ç": "–¥–∞–ª–∞ –ø–∞–∫–µ—Ç–∏–∫ –º–µ—Ç–∞–º—Ñ–µ—Ç–∞–º–∏–Ω–∞",
    "/–º–µ—Ñ": "–¥–∞–ª–∞ –ø–∞–∫–µ—Ç–∏–∫ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞",
    "/–∫–æ–∫—Å": "–¥–∞–ª–∞ –ø–∞–∫–µ—Ç–∏–∫ –∫–æ–∫–∞–∏–Ω–∞",
    "/–≥–µ—Ä—ã—á": "–¥–∞–ª–∞ –ø–∞–∫–µ—Ç–∏–∫ –≥–µ—Ä–æ–∏–Ω–∞",
    "/–ø–æ–∂–∞–º–∫–∞—Ç—å": "–ø–æ–∂–∞–º–∫–∞–ª–∞",
    "/—Å–∏—Å—è": "–ø–æ–º–∞—Ü–∞–ª–∞ –∑–∞ —Å–∏—Å—é",
    "/–ø–æ–ø–∞": "–ø–æ–º—è–ª–∞ –∂–æ–ø—É",
    "/—Ñ–∏—Å—Ç–∏–Ω–≥": "–∑–∞–ø–∏—Ö–Ω—É–ª–∞ —Ä—É–∫—É –ø–æ —Å–∞–º—ã–π –ª–æ–∫–æ—Ç—å –≤ –∂–æ–ø—É",
    "/–≤–æ—Å–∫—Ä–µ—Å–∏—Ç—å": "–≤–æ—Å–∫—Ä–µ—Å–∏–ª–∞",
    "/–æ–±–æ—Å—Å–∞—Ç—å": "–æ–±–æ—Å—Å–∞–ª–∞",
    "/–æ–±–æ—Å—Ä–∞—Ç—å": "–æ–±–æ—Å—Ä–∞–ª–∞",
    "/–ø–æ–Ω—é—Ö–∞—Ç—å": "–ø–æ–Ω—é—Ö–∞–ª–∞",
    "/–∑–∞–Ω—é—Ö–∞—Ç—å": "–∑–∞–Ω—é—Ö–∞–ª–∞",
    "/–∑–∞–∫—É—Ä–∏—Ç—å": "–∑–∞–∫—É—Ä–∏–ª–∞",
    "/—Å–∏–≥–∞—Ä–µ—Ç–∞": "–ø–æ—Ç—É—à–∏–ª–∞ —Å–∏–≥–∞—Ä–µ—Ç—É –æ–±",
    "/–Ω–∞–∫–∞–∑–∞—Ç—å": "–Ω–∞–∫–∞–∑–∞–ª–∞",
    "/–≤—ã–ø–æ—Ä–æ—Ç—å": "–≤—ã–ø–æ—Ä–æ–ª–∞",
    "/—É–±–∏—Ç—å": "—É–±–∏–ª–∞",
    "/–∑–∞—Å—Ç—Ä–µ–ª–∏—Ç—å": "–∑–∞—Å—Ç—Ä–µ–ª–∏–ª–∞",
    "/–≤—Ä–æ—Ç": "–ø–ª—é–Ω—É–ª–∞ –≤ —Ä–æ—Ç",
    "/–ø—Ä–∏–¥—É—à–∏—Ç—å": "–ø—Ä–∏–¥—É—à–∏–ª–∞",
    "/–¥–∞—Ç—å": "–¥–∞–ª–∞",
    "/–∑–∞–±—Ä–∞—Ç—å": "–∑–∞–±—Ä–∞–ª–∞",
    "/–æ—Ç–æ–±—Ä–∞—Ç—å": "–æ—Ç–æ–±—Ä–∞–ª–∞",
    "/–ª—é–±–∏—Ç—å": "–ª—é–±–∏—Ç",
    "/–±–∞–Ω": "–∑–∞–±–∞–Ω–∏–ª–∞",
    "/–≤—ã–≥–Ω–∞—Ç—å": "–≤—ã–≥–Ω–∞–ª–∞ –∏–∑ —á–∞—Ç–∞",
    "/–≤—É–≥–æ–ª": "–ø–æ—Å—Ç–∞–≤–∏–ª–∞ –≤ —É–≥–æ–ª",
    "/–ø–æ–¥—É—à–∫–∞": "–ø–æ–ª–æ–∂–∏–ª–∞ –ø–æ–¥—É—à–∫—É –ø–æ–¥ –∫–æ–ª–µ–Ω–∏",
    "/–±–æ–Ω–∫": "–ø–∏–∑–¥–∞–Ω—É–ª–∞ –ø–æ –±–∞—à–∫–µ",
}

self_actions = {
    "/—É–º–µ—Ä–µ—Ç—å": "–≤–Ω–µ–∑–∞–ø–Ω–æ —É–º–µ—Ä–ª–∞",
    "/—Å—É–∏—Ü–∏–¥": "—Å–æ–≤–µ—Ä—à–∏–ª–∞ —Å—É–∏—Ü–∏–¥",
    "/–∑–∞—Å–Ω—É—Ç—å": "—É—Å–Ω—É–ª–∞",
    "/—É–ª–µ—Ç–µ—Ç—å": "—É–ª–µ—Ç–µ–ª–∞ –≤ –∫–æ—Å–º–æ—Å",
    "/–æ–∫–Ω–æ": "–≤—ã—à–ª–∞ –≤ –æ–∫–Ω–æ",
    "/–∫–æ–Ω—á–∏—Ç—å": "–∫–æ–Ω—á–∏–ª–∞",
    "/–ø–ª–∞–∫–∞—Ç—å": "–∑–∞–ø–ª–∞–∫–∞–ª–∞",
    "/–ø–æ–∫—É—à–∞—Ç—å": "–ø–æ–∫—É—à–∞–ª–∞",
    "/–ø–æ–µ—Å—Ç—å": "–ø–æ–µ–ª–∞",
    "/–ø–æ–ø–∏—Ç—å": "–ø–æ–ø–∏–ª–∞",
    "/–≤—ã–ø–∏—Ç—å": "–≤—ã–ø–∏–ª–∞",
    "/–∑–∏–≥–∞": "–ø–ª–æ—Ç–Ω–æ –ø–æ—Ç—è–Ω—É–ª–∞—Å—å –∫ —Å–æ–ª–Ω—Ü—É",
    "/–Ω–∞–∫–æ–ª–µ–Ω–∏": "–≤—Å—Ç–∞–ª–∞ –Ω–∞ –∫–æ–ª–µ–Ω–∏",
    "/–º–µ—Å—è—á–Ω—ã–µ": "–∏—Å—Ç–µ–∫–∞–µ—Ç –±–ª–∞–≥–æ—Ä–æ–¥–Ω–æ–π –∫—Ä–æ–≤—å—é",
    "/–æ–≤—É–ª—è—Ü–∏—è": "–ø–æ–ª—ã—Ö–∞–µ—Ç –æ—Ç –∂–µ–ª–∞–Ω–∏—è —Ä–∞–∑–¥–µ—Ç—å –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–∞—Å—Ç—å –ª—é–±–≤–∏",
}

# --- –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start_handler))
app.add_handler(CommandHandler("info", info_handler))
app.add_handler(CommandHandler("stats", stats_handler))
app.add_handler(MessageHandler(filters.ALL, hashtag_reaction_handler))  # —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ –≤—Å–µ–º —Ç–∏–ø–∞–º
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))  # —Ç–≤–æ–π –æ—Å–Ω–æ–≤–Ω–æ–π

app.run_polling()
